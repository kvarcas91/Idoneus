<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:converter="clr-namespace:Idoneus.Converters"
                     xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                     xmlns:converters="clr-namespace:Idoneus.Converters">

    <!-- Base ListView Style -->
    <Style x:Key="ListView" TargetType="{x:Type ListView}" BasedOn="{StaticResource MaterialDesignListView}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style  x:Key="ProjectListViewSnippet" TargetType="{x:Type ListView}" BasedOn="{StaticResource ListView}">

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid VerticalAlignment="Center"
                          Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>

                        <Grid.InputBindings>
                            <MouseBinding Gesture="LeftDoubleClick" 
                                          Command="{Binding ElementName=projectSnippetListView, Path=DataContext.OnItemClickedCommand}"
                                          CommandParameter="{Binding}"/>
                        </Grid.InputBindings>

                        <StackPanel Orientation="Horizontal" Background="Transparent">

                            <!-- Priority Color Indicator -->
                            <Border Grid.Column="0"
                                Background="{Binding Priority, Converter={converters:PriorityToColorConverter}}" 
                                Width="2" 
                                Height="10"
                                Margin="5 3 5 3"/>

                            <!-- Project summary -->
                            <TextBlock Grid.Column="0"
                                   Text="{Binding Content, Converter={converters:SingleTextLineConverter}}"
                                   TextTrimming="WordEllipsis"/>
                        </StackPanel>
                        
                        <Grid Grid.Column="1" Background="Transparent">
                            <Grid.ColumnDefinitions>

                                <!-- completed tasks / Total tasks -->
                                <ColumnDefinition Width="Auto"/>

                                <!-- Progress bar -->
                                <ColumnDefinition Width="*"/>

                                <!-- Progress percentage -->
                                <ColumnDefinition Width="60"/>

                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0"
                                   Margin="0 0 10 0"
                                       TextAlignment="Left">
                            <Run Text="{Binding CompletedTaskCount}"/>
                            <Run Text="/"/>
                            <Run Text="{Binding Tasks.Count, Mode=OneWay}"/>
                            </TextBlock>

                            <ProgressBar Grid.Column="1"
                                     Value="{Binding Progress}"
                                         Height="1"
                                     Style="{StaticResource MaterialDesignLinearProgressBar}"
                                      Foreground="{Binding Priority, Converter={converters:PriorityToColorConverter}}"/>

                            <TextBlock Grid.Column="2"
                                   Margin="10 0 10 0"
                                       TextAlignment="Right">
                            <Run Text="{Binding Progress}"/>
                            <Run Text="%"/>
                            </TextBlock>

                        </Grid>

                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Upcoming tasks view from dashboard -->
    <Style x:Key="UpcomingTasksListView" TargetType="{x:Type ListView}" BasedOn="{StaticResource ListView}">
        
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid VerticalAlignment="Center"
                          Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="{Binding DueDate, Converter={converter:DateTimeToStringConverter}, ConverterParameter=0}"
                                       FontSize="10"
                                       Style="{StaticResource MaterialDesignCaptionTextBlock}"/>

                        <!-- Item summary -->
                        <TextBlock Grid.Column="1"
                                       VerticalAlignment="Center"
                                   Text="{Binding Content}"
                                   TextTrimming="WordEllipsis"/>

                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <!-- Disable onMouseOver and default style -->
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Today's task list view from dashboard -->
    <Style x:Key="TodayTaskListView" TargetType="{x:Type ListView}" BasedOn="{StaticResource ListView}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>

                    <Border Margin="5">

                        <CheckBox Grid.Row="0"
                                  Padding="3 0 3 0"
                                  IsChecked="{Binding IsCompleted, Mode=TwoWay}"
                                  Command="{Binding ElementName=TaskListView, Path=DataContext.SelectTaskCommand}"
                                  VerticalAlignment="Center"
                                  CommandParameter="{Binding}">
                            <TextBlock  Grid.Column="1"
                            Text="{Binding Content}"
                                    TextAlignment="Justify"
                                    TextWrapping="Wrap"/>
                        </CheckBox>

                    </Border>

                </DataTemplate>
            </Setter.Value>
        </Setter>

        <!-- Disable onMouseOver and default style -->
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Template pattern list -->
    <Style x:Key="TemplatePatternListView" TargetType="{x:Type ListView}" BasedOn="{StaticResource ListView}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ToggleButton Margin="5"
                            Style="{DynamicResource MaterialDesignFlatToggleButton}"
                                      IsChecked="{Binding IsActive}"
                                      Command="{Binding ElementName=TaskTemplateList, Path=DataContext.SetDayTemplateCommand}"
                                      VerticalAlignment="Center"
                                      Width="24"
                                      Height="24"
                                CommandParameter="{Binding}">
                        <TextBlock Text="{Binding DayName}" 
                                   Background="Transparent"
                                   Style="{StaticResource MaterialDesignOverlineTextBlock}"/>
                    </ToggleButton>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" HorizontalAlignment="Right"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <!-- Disable onMouseOver and default style -->
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Task template list -->
    <Style x:Key="TaskTemplateListView" TargetType="{x:Type ListView}" BasedOn="{StaticResource ListView}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>

                    <Expander>
                        <Expander.Header>
                            <Grid Margin="5">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock  Grid.Column="0"
                                    VerticalAlignment="Center"
                                    Text="{Binding Content}"
                                    TextAlignment="Justify"
                                    TextWrapping="Wrap"/>

                                <ToggleButton Grid.Column="1"
                            Style="{DynamicResource MaterialDesignFlatToggleButton}"
                                      IsChecked="{Binding IsActive}"
                                       Command="{Binding ElementName=TaskTemplateList, Path=DataContext.SelectTemplateCommand}"
                                      VerticalAlignment="Center"
                                      Width="30"
                                      Height="30"
                                CommandParameter="{Binding}">
                                    <materialDesign:PackIcon Kind="{Binding IsActive, Converter={converter:BoolToIconTaskTemplateIconConverter}}"
                                                     VerticalAlignment="Stretch"
                                                     HorizontalAlignment="Stretch"
                                                     Foreground="{DynamicResource PrimaryHueMidBrush}"
                                                       Width="24"
                                      Height="24"/>
                                </ToggleButton>

                                <Button Grid.Column="2"
                                VerticalAlignment="Center"
                                HorizontalContentAlignment="Right"
                            Style="{StaticResource MaterialDesignFlatButton}"
                                Command="{Binding ElementName=TaskTemplateList, Path=DataContext.DeleteTemplateCommand}"
                                CommandParameter="{Binding}">
                                    <materialDesign:PackIcon Kind="Delete"/>
                                </Button>

                            </Grid>
                        </Expander.Header>

                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                          
                                <ListView ItemsSource="{Binding DateList}"
                                    
                                          Grid.Column="1"
                                  x:Name="templatePatternListView"
                                  Style="{StaticResource TemplatePatternListView}"
                                    HorizontalAlignment="Right"/>


                            
                        </Grid>
                       
                       
                    </Expander>


                </DataTemplate>
            </Setter.Value>
        </Setter>

        <!--Disable onMouseOver and default style--> 
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Project sidebar list style -->
    <Style x:Key="ProjectListView" TargetType="{x:Type ListView}" BasedOn="{StaticResource ListView}">

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>

                    <Grid x:Name="container"
                            Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid.InputBindings>
                            <MouseBinding Gesture="LeftClick" 
                                    Command="{Binding ElementName=projectListView, Path=DataContext.SelectProjectCommand}"
                                    CommandParameter="{Binding}"/>
                        </Grid.InputBindings>

                        <!-- Priority bar -->
                        <Border Background="{Binding Priority, Converter={converter:PriorityToColorConverter}}" 
                                Width="4" 
                                HorizontalAlignment="Left"/>

                        <!-- Progress -->
                        <Border Grid.Column="0" 
                        Padding="8 15">

                            <Grid >

                                <Border Background="Transparent"
                                BorderBrush="{Binding Priority, Converter={converter:PriorityToColorConverter}}"
                                BorderThickness="1.5"
                                Margin="1"
                                Opacity="0.5"
                                CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource self}}"
                                Width="{Binding ActualHeight, RelativeSource={RelativeSource self}}">

                                    <TextBlock  
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                FontFamily="Arial"
                                FontWeight="Bold"
                                    Foreground="{DynamicResource SecondaryHueMidBrush}" >
                                    <Run Text="{Binding Progress}"/>
                                    <Run Text="%"/>
                                    </TextBlock>
                                </Border>

                                <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"
                            Height="40"
                            Width="40"
                            Value="99.9"
                            Foreground="LightGray"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>

                                <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"
                            Height="40"
                            Width="40"
                            Foreground="{Binding Priority, Converter={converter:PriorityToColorConverter}}"
                            Value="{Binding Progress, Converter={converter:ProgressConverter}}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>



                            </Grid>

                        </Border>

                        <!-- Main Content -->
                        <Border Padding="0 0 8 0"  Grid.Column="1">

                            <StackPanel VerticalAlignment="Center" >

                                <!-- Header -->
                                <TextBlock Text="{Binding Header, Converter={converter:SingleTextLineConverter}}"
                                    Padding="0 0 0 2"
                                    Foreground="{DynamicResource PrimaryHueMidBrush}"
                                    TextTrimming="CharacterEllipsis"/>

                                <!-- Content -->
                                <TextBlock Text="{Binding Content, Converter={converter:SingleTextLineConverter}}"
                                    Padding="0 2 0 0"
                                    Foreground="Gray"
                                    ToolTip="{Binding Content}"
                                    TextTrimming="CharacterEllipsis"/>
                            </StackPanel>
                        </Border>

                        <Separator Grid.Row="1" 
                            Grid.ColumnSpan="2"
                            Margin="10 0 10 0"/>
                    </Grid>
                        
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <!-- Disable onMouseOver and default style -->
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Files ListView -->
    <Style x:Key="FileListView" TargetType="{x:Type ListView}" BasedOn="{StaticResource ListView}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <materialDesign:Card
                        
                            VerticalAlignment="Top" 
                             Background="Transparent"
                            Tag="{Binding RelativeSource={RelativeSource 
                                    Mode=FindAncestor, 
                                    AncestorType={x:Type UserControl}}}">

                        <materialDesign:Card.InputBindings>
                            <MouseBinding Gesture="LeftDoubleClick" 
                                              Command="{Binding ElementName=FileListView,Path=DataContext.FileListItemClickCommand}"
                                              CommandParameter="{Binding}"/>
                        </materialDesign:Card.InputBindings>
                        <materialDesign:Card.ContextMenu>
                            <ContextMenu>
                                <!-- Options -->

                                <MenuItem Header="Edit" Command="{
                                                    Binding Path=PlacementTarget.Tag.DataContext.EditFileCommand,
                                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                                    CommandParameter="{Binding}"/>
                                <MenuItem Header="Delete" Command="{
                                                    Binding Path=PlacementTarget.Tag.DataContext.DeleteFileCommand,
                                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                                    CommandParameter="{Binding}"/>
                                <Separator/>
                                <MenuItem Header="Show in explorer" Command="{
                                                    Binding Path=PlacementTarget.Tag.DataContext.ShowInExplorerCommand,
                                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                                    CommandParameter="{Binding}"/>
                            </ContextMenu>
                        </materialDesign:Card.ContextMenu>

                        <StackPanel Orientation="Vertical" VerticalAlignment="Top">


                            <Image Width="24" Height="24"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Top"
                                       Source="{Binding Icon, Converter={converters:ImageConverter}}"/>


                            <TextBox x:Name="fileName"
                                    FontSize="12" 
                                           Width="80"
                                           BorderThickness="0"
                                           TextAlignment="Center"
                                           TextWrapping="Wrap"
                                         Cursor="Arrow"
                                         Focusable="False"
                                         Background="Transparent"
                                           Text="{Binding Name, Mode=TwoWay}">
                                <TextBox.Style>
                                    <Style TargetType="TextBox">
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Style>
                                </TextBox.Style>

                            </TextBox>

                        </StackPanel>
                    </materialDesign:Card>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Comment ListView -->
    <Style x:Key="CommentListView" TargetType="{x:Type ListView}" BasedOn="{StaticResource ListView}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Background="Transparent"
                            x:Name="container"
                                    Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                          AncestorType={x:Type UserControl}}}">

                        <!-- Context menu -->
                        <Border.ContextMenu>
                            <ContextMenu>

                                <!-- Expand -->
                                <MenuItem Header="Expand"
                                                      Command="{Binding 
                                                                Path=PlacementTarget.Tag.DataContext.ExpandCommentCommand,
                                                                RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType=ContextMenu}}"
                                                      CommandParameter="{Binding}"/>

                                <!-- Delete -->
                                <MenuItem Header="Delete"
                                                      Command="{Binding 
                                                                Path=PlacementTarget.Tag.DataContext.DeleteCommentCommand,
                                                                RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType=ContextMenu}}"
                                                      CommandParameter="{Binding}"/>
                            </ContextMenu>
                        </Border.ContextMenu>

                        <!-- Input Bindings -->
                        <Border.InputBindings>

                            <!-- Left double click -->
                            <MouseBinding Gesture="LeftDoubleClick"
                                                      Command="{Binding ElementName=CommentListView,
                                                                Path=DataContext.ExpandCommentCommand}"
                                                      CommandParameter="{Binding}"/>

                        </Border.InputBindings>

                        <Grid
                        Margin="10 0">
                            <Grid.RowDefinitions>

                                <!-- submition date -->
                                <RowDefinition Height="Auto"/>

                                <!-- content -->
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Border
                                BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                                BorderThickness="0 0 0 0.3"
                                Margin="0 0 5 0" >
                                <TextBlock Grid.Row="0"
                                   Text="{Binding SubmitionDate, Converter={converters:DateTimeToStringConverter}}"
                                    Style="{StaticResource MaterialDesignOverlineTextBlock}"
                                       Foreground="{DynamicResource PrimaryHueMidBrush}"
                                      />

                            </Border>

                          

                            <TextBlock Grid.Row="1"
                                   Text="{Binding Content}"
                                       Margin="10 3 5 10"
                                        MaxHeight="60"
                                       TextWrapping="Wrap" 
                                       TextTrimming="CharacterEllipsis"/>

                        </Grid>

                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <!-- Disable onMouseOver and default style -->
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Link ListView -->
    <Style x:Key="LinkListView" TargetType="{x:Type ListView}" BasedOn="{StaticResource ListView}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Background="Transparent"
                            x:Name="container"
                            ToolTip="{Binding Content}"
                                    Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                          AncestorType={x:Type UserControl}}}">

                        <!-- Context menu -->
                        <Border.ContextMenu>
                            <ContextMenu>

                                <!-- Delete -->
                                <MenuItem Header="Delete"
                                                      Command="{Binding 
                                                                Path=PlacementTarget.Tag.DataContext.DeleteCommentCommand,
                                                                RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType=ContextMenu}}"
                                                      CommandParameter="{Binding}"/>
                            </ContextMenu>
                        </Border.ContextMenu>

                        <!-- Input Bindings -->
                        <Border.InputBindings>

                            <!-- Left double click -->
                            <MouseBinding Gesture="LeftDoubleClick"
                                                      Command="{Binding ElementName=LinkListView,
                                                                Path=DataContext.OpenLinkCommand}"
                                                      CommandParameter="{Binding}"/>

                        </Border.InputBindings>

                        <Grid
                        Margin="10 0">
                            <Grid.RowDefinitions>

                                <!-- content -->
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="1"
                                   Text="{Binding Header}"
                                       Margin="10 3 5 10"
                                        MaxHeight="60"
                                       TextWrapping="Wrap" 
                                       TextTrimming="CharacterEllipsis"/>

                        </Grid>

                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <!-- Disable onMouseOver and default style -->
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>